{"version":3,"file":"static/js/469.6bdbb9df.chunk.js","mappings":"8LACA,EAA2B,gC,SCa3B,EAXsB,WACpB,OACE,iBAAKA,UAAWC,EAAoB,WAClC,6CACA,SAAC,KAAI,CAACC,GAAG,iBAAiBF,UAAU,MAAK,2BAK/C,C,0GCXA,EAAuB,wB,SCkBvB,EAhBkB,SAACG,GAChB,OACC,gBAAIH,UAAWC,EAAgB,WAC7B,+BACE,iCACE,uBAAIE,EAAMC,UAEZ,gCAAaD,EAAME,aAErB,SAAC,KAAI,CAACL,UAAU,MAAME,GAAE,kBAAaC,EAAMG,IAAK,+BAKtD,EChBA,EAAuB,wBAAvB,EAAyD,2BC2DzD,EAzCkB,SAACH,GAEjB,IAZkBI,EAAQC,EAYpBC,GAAWC,EAAAA,EAAAA,MAGXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAiD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QAErCC,GAnBYV,EAmBcJ,EAAMI,OAnBZC,EAmBoBK,EAlBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAuBA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKrB,UAAWC,EAAmB,UACjC,oBAAQqB,QAZe,SAACC,GAE5Bd,EAAS,SAAD,OAAUI,EAAqB,OAAS,OAMlD,EAI4C,kBAC7BA,EAAmC,aAAd,kBAGhC,eAAIb,UAAWC,EAAgB,SAC5BgB,EAAaO,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERnB,GAAImB,EAAMnB,GACVD,OAAQoB,EAAMpB,OACdD,KAAMqB,EAAMrB,MAHPqB,EAAMnB,GAIX,QAKZ,E,2BCrBA,EA9BkB,WAChB,OAKIoB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAJxBC,EAAW,EAAXA,YACAC,EAAM,EAANA,OACMC,EAAY,EAAlBC,KACAC,EAAK,EAALA,MAOF,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACF,GAAG,CAACA,IAEW,YAAXC,GAEA,gBAAK7B,UAAU,WAAU,UACvB,SAACkC,EAAA,QAAc,MAKjBF,GACK,cAAGhC,UAAU,WAAU,SAAEgC,IAGnB,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAGtD,SAAC,EAAS,CAAC5B,OAAQuB,KAFjB,SAACM,EAAA,EAAa,GAGzB,C","sources":["webpack://practice-project-react-router/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","webpack://practice-project-react-router/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://practice-project-react-router/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","pages/AllQuotes.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__gqSv8\"};","import { Link } from \"react-router-dom\";\nimport cssClasses from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={cssClasses.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/quotes/addnew\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__U8WRZ\"};","import { Link } from \"react-router-dom\";\nimport cssClasses from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n   return (\n    <li className={cssClasses.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__23bGE\",\"sorting\":\"QuoteList_sorting__EDoVs\"};","import { Fragment } from \"react\";\n// react-router-dom version 6\nimport { useNavigate, useLocation } from \"react-router-dom\";\n// react-router-dom version 5\n// import { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport cssClasses from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  // react-router-dom version 6\n  const navigate = useNavigate();\n  // react-router-dom version 5\n  // const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = (order) => {\n    // react-router-dom version 6\n    navigate(`?sort=${isSortingAscending ? \"desc\" : \"asc\"}`);\n    // react-router-dom version 5\n    // history.push({\n    //   pathname: location.pathname,\n    //   search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    // });\n  };\n  return (\n    <Fragment>\n      <div className={cssClasses.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {!isSortingAscending ? \"Ascending\" : \"Descending\"}\n        </button>\n      </div>\n      <ul className={cssClasses.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import React, { useEffect } from \"react\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/ui/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n"],"names":["className","cssClasses","to","props","text","author","id","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","order","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length","NoQuotesFound"],"sourceRoot":""}