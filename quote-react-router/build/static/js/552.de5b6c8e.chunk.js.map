{"version":3,"file":"static/js/552.de5b6c8e.chunk.js","mappings":"8NACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAgB,SAAEF,EAAMG,UACjD,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BCsEnI,EAjEkB,SAACH,GACjB,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAErB,GAAoCE,EAAAA,EAAAA,WAAS,GAAM,eAAhCC,GAAF,KAAe,MAqBhC,OACE,+BASE,SAAC,EAAI,WACH,kBACEP,UAAWC,EACXO,SAxBR,SAA6BC,GAC3BA,EAAMC,iBAEN,IAAMC,EAAgBR,EAAeS,QAAQC,MACvCC,EAAcT,EAAaO,QAAQC,MAGrCF,GAAiBG,GACnBf,EAAMgB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GACpD,EAgBQI,QA7BqB,WAC3BX,GAAc,SAACY,GAAS,OAAK,CAAI,GACnC,EA2BsC,UAE7BpB,EAAMqB,YACL,gBAAKpB,UAAWC,EAAmB,UACjC,SAACoB,EAAA,QAAc,OAGnB,iBAAKrB,UAAWC,EAAmB,WACjC,kBAAOqB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKtB,QAEtC,iBAAKH,UAAWC,EAAmB,WACjC,kBAAOqB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKpB,QAEpC,gBAAKL,UAAWC,EAAmB,UACjC,mBAAQ0B,QAjDY,WAC5BpB,GAAc,EAChB,EA+CkDP,UAAU,MAAK,+BAQnE,E,kBC1BA,EAlCoB,WAClB,OAAgC4B,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAEfC,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GAEFC,EAAS,UAAW,CAAEG,SAAS,GAInC,GAAG,CACDJ,EAEAC,IASF,OACE,SAAC,EAAS,CACRZ,UAAsB,YAAXW,EACXhB,WAPyB,SAACqB,GAC5BN,EAAYM,GACZC,QAAQC,IAAIF,EACd,GAOF,C","sources":["webpack://practice-project-react-router/./src/components/ui/Card.module.css?49cd","components/ui/Card.js","webpack://practice-project-react-router/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/AddNewQuote.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__ASxy0\"};","import cssClasses from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return <div className={cssClasses.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__yoqCe\",\"loading\":\"QuoteForm_loading__sTWfN\",\"control\":\"QuoteForm_control__woMr2\",\"actions\":\"QuoteForm_actions__whHyo\"};","import { useRef, useState } from \"react\";\n\nimport Card from \"../ui/Card\";\nimport LoadingSpinner from \"../ui/LoadingSpinner\";\nimport cssClasses from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const [isEntering, setIsEntering] = useState(false);\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const onFormFocusedHandler = () => {\n    setIsEntering((prevState) => true);\n  };\n\n  function onSubmitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n    if (enteredAuthor && enteredText)\n      props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  return (\n    <>\n      {/* react-router-dom version 5 */}\n      {/* <Prompt\n        when={isEntering}\n        key=\"aaa\"\n        message={(location) =>\n          `Are you sure? \\nAll your entered data will be lost !!!`\n        }\n      /> */}\n      <Card>\n        <form\n          className={cssClasses.form}\n          onSubmit={onSubmitFormHandler}\n          onFocus={onFormFocusedHandler}\n        >\n          {props.isLoading && (\n            <div className={cssClasses.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n          <div className={cssClasses.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={cssClasses.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={cssClasses.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\n// react-router-dom version 6\nimport { useNavigate } from \"react-router-dom\";\n// react-router-dom version 5\n// import { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst AddNewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  // react-router-dom version 6\n  const navigate = useNavigate();\n  // react-router-dom version 5\n  // const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      // react-router-dom version 6\n      navigate(\"/quotes\", { replace: true });\n      // react-router-dom version 5\n      // history.replace(\"/quotes\");\n    }\n  }, [\n    status,\n    // react-router-dom version 6\n    navigate,\n    // react-router-dom version 5\n    // history\n  ]);\n\n  const onAddNewQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n    console.log(quoteData);\n  };\n  return (\n    <QuoteForm\n      isLoading={status === \"pending\"}\n      onAddQuote={onAddNewQuoteHandler}\n    />\n  );\n};\n\nexport default AddNewQuote;\n"],"names":["props","className","cssClasses","children","authorInputRef","useRef","textInputRef","useState","setIsEntering","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","onFocus","prevState","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","replace","quoteData","console","log"],"sourceRoot":""}